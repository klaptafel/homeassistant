blueprint:
  name: Send Notification
  description: >-
    A script that sends a notification to selected recipients based on their configuration.
  domain: script
  input:
    recipients:
      name: Ontvangersconfiguratie
      description: Een lijst van ontvangers met bijbehorende notificatiediensten en sensors
      selector:
        object: {}

fields:
  recipient:
    selector:
      select:
        options: "{{ ['iedereen', 'automatisch'] + recipients | map(attribute='name') | list }}"
        name: Ontvanger
        required: true
        default: iedereen

  title:
    selector:
      text: {}
    name: Titel
    required: true

  message:
    selector:
      text: {}
    name: Bericht
    required: true

  group:
    selector:
      text: null
    name: Groep
    required: false

  tag:
    selector:
      text: null
    name: Tag
    required: false

  image:
    selector:
      text: {}
    name: Afbeelding

  camera:
    selector:
      entity: {}
    name: Camera

  actions:
    selector:
      object: {}
    name: Acties
    required: false

  interruption_level:
    selector:
      select:
        options:
          - label: Stil
            value: passive
          - label: Belangrijk
            value: time-sensitive
          - label: Kritiek
            value: critical
        multiple: false
        mode: dropdown
    name: Attentiewaarde
    required: false

  url:
    selector:
      text: null
    name: De notificatie opent...
    default: /lovelace

mode: single

sequence:
  - variables:
      notify_services: |
        {% set services = [] %}
        
        {# Keuze voor "iedereen" - voeg alle notify services toe #}
        {% if recipient == 'iedereen' %}
          {% for recipient in recipients %}
            {% set services = services + [recipient.notify_service] %}
          {% endfor %}
          
        {# Keuze voor "specifiek" - zoek naar geselecteerde ontvanger #}
        {% elif recipient != 'iedereen' and recipient != 'automatisch' %}
          {% for recipient in recipients %}
            {% if recipient.name == recipient %}
              {% set services = services + [recipient.notify_service] %}
            {% endif %}
          {% endfor %}
          
        {# Automatisch op basis van thuisstatus - voeg notify services toe op basis van sensorstatus #}
        {% elif recipient == 'automatisch' %}
          {% for recipient in recipients %}
            {% if is_state(recipient.home_sensor, 'on') %}
              {% set services = services + [recipient.notify_service] %}
            {% endif %}
          {% endfor %}
        {% endif %}
        
        {# Als geen services gevonden zijn, gebruik dan "iedereen" #}
        {% if services | length == 0 %}
          {% for recipient in recipients %}
            {% set services = services + [recipient.notify_service] %}
          {% endfor %}
        {% endif %}
        
        {{ services }}
        
  - choose:
      - conditions:
          - condition: template
            value_template: "{{ notify_services | length > 0 }}"
        sequence:
          - repeat:
              for_each: "{{ notify_services }}"
              sequence:
                - data:
                    title: "{{ title }}"
                    message: "{{ message }}"
                    data:
                      group: "{{ group if group else None }}"
                      tag: "{{ tag if tag else None }}"
                      url: "{{ url if url else None }}"
                      push:
                        interruption-level: >-
                          {{ interruption_level if interruption_level else
                          'active' }}
                      image: "{{ image if image else None }}"
                      entity_id: "{{ camera if camera else None }}"
                      actions: "{{ actions if actions else None }}"
                  action: "{{ repeat.item }}"