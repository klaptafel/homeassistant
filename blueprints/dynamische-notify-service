blueprint:
  name: Notificatie versturen
  description: >-
    Een script om notificaties te versturen.
  domain: script
  input:
    recipients:
      name: Ontvangersconfiguratie
      description: >
        Configureer notify-services en bijbehorende sensors voor elke ontvanger.
        Voeg elke ontvanger toe als een object met `notify_service` en `home_sensor`.
      default: []
      selector:
        object: {}

mode: queued

fields:
  message:
    selector:
      text:
        multiline: true
    name: Message
    description: The message to broadcast
    required: true
  recipient:
      name: Ontvanger
      description: Wie moet de melding ontvangen?
      selector:
        select:
          options:
            - label: Specifieke ontvanger
              value: specifiek
            - label: Iedereen
              value: iedereen
            - label: Automatisch (op basis van thuisstatus)
              value: automatisch
      default: iedereen

variables:
  recipients: !input recipients
  recipient_mode: !input recipient

sequence:
  - variables:
      notify_services: >
        {% set services = [] %}
        {% if recipient_mode == 'iedereen' %}
          {% for recipient in recipients %}
            {% set services = services + [recipient.notify_service] %}
          {% endfor %}
        {% elif recipient_mode == 'specifiek' %}
          {% for recipient in recipients %}
            {% set services = services + [recipient.notify_service] %}
          {% endfor %}
        {% elif recipient_mode == 'automatisch' %}
          {% for recipient in recipients %}
            {% if is_state(recipient.home_sensor, 'on') %}
              {% set services = services + [recipient.notify_service] %}
            {% endif %}
          {% endfor %}
        {% endif %}
        {{ services }}
  - choose:
      - conditions:
          - condition: template
            value_template: "{{ notify_services | length > 0 }}"
        sequence:
          - repeat:
              for_each: "{{ notify_services }}"
              sequence:
                - service: "{{ repeat.item }}"
                  data:
                    message: !input message