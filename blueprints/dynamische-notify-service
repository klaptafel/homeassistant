blueprint:
  name: Send notification
  description: >-
    A script that sends a notification.
  domain: script
  input:
    recipients:
      selector:
        object: {}
      name: Ontvangersconfiguratie

mode: queued

fields:
  message:
    selector:
      text:
        multiline: true
    name: Message
    description: The message to send
    required: true
  recipient:
    name: Ontvanger
    description: Wie moet de melding ontvangen?
    selector:
      select:
        options:
          - label: Specifieke ontvanger
            value: specifiek
          - label: Iedereen
            value: iedereen
          - label: Automatisch (op basis van thuisstatus)
            value: automatisch
    default: iedereen

sequence:
- variables:
    notify_services: >
      {% set services = [] %}
      {% if recipient == 'iedereen' %}
        {% for recipient in recipients %}
          {% set services = services + [recipient.notify_service] %}
        {% endfor %}
      {% elif recipient == 'specifiek' %}
        {% for recipient in recipients %}
          {% set services = services + [recipient.notify_service] %}
        {% endfor %}
      {% elif recipient == 'automatisch' %}
        {% for recipient in recipients %}
          {% if is_state(recipient.home_sensor, 'on') %}
            {% set services = services + [recipient.notify_service] %}
          {% endif %}
        {% endfor %}
      {% endif %}
      {{ services }}

- choose:
    - conditions:
        - condition: template
          value_template: "{{ notify_services | length > 0 }}"
      sequence:
        - repeat:
            for_each: "{{ notify_services }}"
            sequence:
              - service: "{{ repeat.item }}"
                data:
                  message: "{{ message }}"